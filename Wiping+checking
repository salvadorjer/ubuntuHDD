import subprocess
import os

##will probably be useful later: #sudo lshw -class disk -short (possibly >> outputfile.txt depending on use needed)
##it is possible that a bug includes  having a first line filled with zeros counting as a false positive.

isClean = False #variable checking that the drive has been zeroed
isGood = False #variable checking that the drive is finalized

def readzero (isClean):#function that checks the output file for zeroing the drive
    z=open("outputfile.txt")
    for line in z:
        print line
        if "No space left on device" in line:
            print "all sectors allocated zero"
            return True
        else:
            print "not all sectors were zeroed"
            return False

#def readcheck (isGood):#function that checks the output of the file for reading the 0's
#    f=open("octaldump.txt")
#    stability = 0
#    chars = set('123456789')
#    for line in f:
#        if any((c in chars) for c in line):#counts the number of lines that contain any of the values 1-9 we predict one instance on the bottom line of the file.
#            stability = stability +1
#            print "stability: "
#            print stability
#    if stability > 1:
#        return False
#    else:
#        return True

def readcheck(isGood):
    f=open("octaldump.txt")
    line=f.readline().strip()#strip removes the hanging new line at the end
    if line == "0000000 000000 000000 000000 000000 000000 000000 000000 000000":
        return True
    else:
        return False
    



#send command
os.system("clear")

cleanup = "rm -f octaldump.txt outputfile.txt blksize.txt"
command = "lsblk" #we can add " | tee outputfile.txt" to send info to file.  -a will append

checkwipe = "sudo od /dev/sdb >> octaldump.txt | head" ##original version has >> instead of 2>
getblksize = "sudo blockdev --getbsz /dev/sdb >> blksize.txt"

os.system(cleanup)#gets rid of old files
os.system(command)#lists all drives and partitions
os.system(getblksize)#get the block size for the given drive and store it in a text file
f=open("blksize.txt")
for line in f:
    bsize = line
zero = "sudo dd if=/dev/zero of=/dev/sdb 2> outputfile.txt bs=%s" % line #puts the block size in the zeroing

os.system(zero)#fills with zeros using appropriate block size

if readzero(isClean) == False:#calls the function to confirm that the drive was zeroed
    print "setting of zero's failed, exiting wiping process"
    exit
else:
    isClean = True

os.system(checkwipe)#dumps the data into a file which we can then see if we find any non-zeo values
#octaldump may require further testing (unsure if terminal and file output are behaving differently)
if readcheck(isGood)==False:
    print "checking the octal dump resulted in errors"
    exit
else:
    isGood = True


if isClean == True and isGood == True:
    print "drive fully sanitized and ready for use"
else:
    print "An unexpected error occured"
